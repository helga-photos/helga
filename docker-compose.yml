version: '3.5'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000 --keep-alive 20 --timeout 300 --graceful-timeout 300
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    ports:
      - '1228:1228'
    env_file:
      - ./.env.prod
    depends_on:
      - db
  # flask:
  #   build:
  #     context: ./flask
  #     dockerfile: Dockerfile
  #   volumes:
  #     - media_volume:/home/app/flask/mediafiles
  #   shm_size: "8gb"
  #   ulimits:
  #     memlock: -1
  #     stack: 67108864
  #   expose:
  #     - 5000
  #   ports:
  #     - '5000:5000'
  #   env_file:
  #     - ./.env.prod
  #   depends_on:
  #     - web
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.my-app.rule=Host(`helga.photos`)'
      - 'traefik.http.routers.my-app.tls=true'
      - 'traefik.http.routers.my-app.tls.certresolver=lets-encrypt'
  traefik:
    image: traefik:2.1
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
    - ./traefik:/etc/traefik
    - /var/run/docker.sock:/var/run/docker.sock:ro
  # aiogram:
  #   build:
  #     context: ./aiogram
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./.env.prod
  #   volumes:
  #     - media_volume:/usr/src/aiogram/mediafiles
  #   depends_on:
  #     - web

volumes:
  postgres_data:
  static_volume:
  media_volume: