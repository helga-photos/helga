###########
# BUILDER #
###########

# pull official base image
# FROM python:3.8.3-alpine as builder
FROM python:3.8.3 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
# RUN apk update \
#     && apk add postgresql-dev gcc python3-dev musl-dev
RUN apt-get update \
    && apt-get install -y postgresql postgresql-client gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
# FROM python:3.8.3-alpine
FROM python:3.8.3

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
# RUN addgroup -S app && adduser -S app -G app
RUN addgroup --system app && adduser --system app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
RUN mkdir $APP_HOME/mediafiles/imgbank
RUN mkdir $APP_HOME/mediafiles/imgbank/1
RUN mkdir $APP_HOME/mediafiles/imgbank/2
RUN mkdir $APP_HOME/mediafiles/imgbank/3
RUN mkdir $APP_HOME/mediafiles/imgbank/4
RUN mkdir $APP_HOME/mediafiles/imgbank/5
RUN mkdir $APP_HOME/mediafiles/imgbank/666
WORKDIR $APP_HOME

RUN mkdir -p /home/app/.config/matplotlib
RUN chmod 775 /home/app/.config/matplotlib

# install dependencies
# RUN apk update && apk add libpq
# RUN apt-get update && apt-get install -y libpq
RUN apt-get update && apt-get install -y libpq-dev netcat ffmpeg libsm6 libxext6
RUN python -m pip install --upgrade pip
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

RUN pip install git+https://github.com/ssut/py-googletrans.git@feature/rpc
# RUN pip install googletrans
# RUN pip install googletrans==4.0.0rc1


# RUN pip install torch==1.7.1+cpu torchvision==0.8.2+cpu torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html
# RUN python -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cpu/torch1.7/index.html


# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME


# use github for pulling staticfiles
# COPY ./static $APP_HOME/staticfiles

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

RUN chmod +x /home/app/web/entrypoint.prod.sh

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
